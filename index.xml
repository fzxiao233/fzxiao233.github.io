<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>FZxiao 的大仓库</title><link>https://fzxiao233.github.io/</link><description>Recent content on FZxiao 的大仓库</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 11 Oct 2020 16:05:21 +0800</lastBuildDate><atom:link href="https://fzxiao233.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>利用 Github Actions 和 Hugo 搭建自动化构建的静态博客</title><link>https://fzxiao233.github.io/posts/build-blog-by-hugo/</link><pubDate>Sun, 11 Oct 2020 16:05:21 +0800</pubDate><guid>https://fzxiao233.github.io/posts/build-blog-by-hugo/</guid><description>&lt;img src="https://fzxiao233.github.io/posts/build-blog-by-hugo/build-blog-by-hugo-logo.png" alt="Featured image of post 利用 Github Actions 和 Hugo 搭建自动化构建的静态博客" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>既然刚折腾完 Hugo，蹭着记忆还清晰，梳理一下搭建过程吧&lt;/p>
&lt;h2 id="工具和网站介绍">工具和网站介绍&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://gohugo.io" target="_blank" rel="noopener"
>Hugo&lt;/a>:&lt;/p>
&lt;p>号称是世界上最快静态网页构建框架(framework)&lt;/p>
&lt;p>由 Go 编写而成，用于生成我们博客所需的静态页面&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://git-scm.com/" target="_blank" rel="noopener"
>Git&lt;/a>:&lt;/p>
&lt;p>Git 是一个分散式版本控制软件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com" target="_blank" rel="noopener"
>Github&lt;/a>:&lt;/p>
&lt;p>&lt;del>最大的同性交友网站&lt;/del>
GitHub是通过Git进行版本控制的软件源代码托管服务平台&lt;/p>
&lt;p>本教程利用的是 Github 提供的名为 Github Pages 的免费网站托管服务&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="教程正文">教程正文&lt;/h2>
&lt;hr>
&lt;h3 id="step-0-安装-git-和-注册-github">Step 0: 安装 Git 和 注册 Github&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>安装 Git:&lt;/p>
&lt;p>打开 &lt;a class="link" href="https://git-scm.com/downloads" target="_blank" rel="noopener"
>Git&lt;/a> 页面，按照你的操作系统，下载安装程序，并安装&lt;/p>
&lt;/li>
&lt;li>
&lt;p>注册 Github:&lt;/p>
&lt;p>打开 &lt;a class="link" href="https://github.com/" target="_blank" rel="noopener"
>Github&lt;/a> 填写屏幕右侧的表单，跟随步骤进行即可&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="step-1-安装-hugo">Step 1: 安装 Hugo&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Windows 用户:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>下载:&lt;/p>
&lt;p>前往&lt;a class="link" href="https://github.com/gohugoio/hugo/releases" target="_blank" rel="noopener"
>Releases&lt;/a>页面，查找名称类似于 &lt;strong>hugo_0.76.3_Windows-64bit.zip&lt;/strong> 的压缩包，下载解压即可&lt;/p>
&lt;p>请自行确定使用 x64/x86 版本&lt;/p>
&lt;/li>
&lt;li>
&lt;p>配置环境变量:&lt;/p>
&lt;p>右键开始菜单按钮&lt;/p>
&lt;p>选择系统&lt;/p>
&lt;p>在新打开的页面左侧中选择高级系统设置&lt;/p>
&lt;p>点击环境变量按钮&lt;/p>
&lt;p>在用户变量部分， 找到名为 PATH 的部分&lt;/p>
&lt;p>在 PATH 上双击&lt;/p>
&lt;p>点击添加按钮&lt;/p>
&lt;p>在弹出的窗口中选择含有 hugo.exe 文件的文件夹&lt;/p>
&lt;p>点击完成即可&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Macos 用户:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>如果你安装了 Brew：&lt;/p>
&lt;blockquote>
&lt;p>brew install hugo&lt;/p>
&lt;/blockquote>
&lt;p>在你喜欢的 Terminal 中执行上述命令即可&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果你未安装 Brew:&lt;/p>
&lt;p>前往&lt;a class="link" href="https://github.com/gohugoio/hugo/releases" target="_blank" rel="noopener"
>Releases&lt;/a>页面，查找名称类似于 &lt;strong>hugo_0.76.3_macOS-64bit.tar.gz&lt;/strong> 的压缩包并下载&lt;/p>
&lt;p>解压即可&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="step-2-利用-hugo-生成你的网站">Step 2: 利用 Hugo 生成你的网站&lt;/h3>
&lt;blockquote>
&lt;p>如果你进行此步骤遇到麻烦，请确认上一步骤是否正确进行&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>打开 Terminal&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Windows:&lt;/p>
&lt;p>按下 win + x 键，选取 windows powershell&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Macos:&lt;/p>
&lt;p>根据喜好使用即可，笔者这里用的是 iTerm&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>生成新网站&lt;/p>
&lt;blockquote>
&lt;p>{var} 这样的标记，表示将此处替换成内部描述的字符，注意去掉{}&lt;/p>
&lt;/blockquote>
&lt;p>在 Terminal 下执行&lt;/p>
&lt;pre>&lt;code> &amp;gt;hugo new site {此处输入你要生成的网站目录名}
&lt;/code>&lt;/pre>
&lt;p>不出意外, 目录中已出现你指定名称的文件夹&lt;/p>
&lt;/li>
&lt;li>
&lt;p>选取 Blog 主题&lt;/p>
&lt;ul>
&lt;li>
&lt;p>下载主题&lt;/p>
&lt;p>可以在这个网站&lt;a class="link" href="https://themes.gohugo.io/" target="_blank" rel="noopener"
>Themes&lt;/a>或通过搜索引擎下载你喜欢的主题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安装主题&lt;/p>
&lt;p>下载后，主题应为一个压缩包，解压后放至网站目录内的 themes 文件夹内即可&lt;/p>
&lt;/li>
&lt;li>
&lt;p>配置主题&lt;/p>
&lt;p>鉴于不同主题配置方法不一，请参阅你选择的主题提供的文档&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>开始创作&lt;/p>
&lt;p>在 Terminal 内执行&lt;/p>
&lt;pre>&lt;code> &amp;gt;hugo new post/{文章名}.md
&lt;/code>&lt;/pre>
&lt;p>来创建文章文件&lt;/p>
&lt;blockquote>
&lt;p>注意：Hugo所使用的是名为 Markdown 的轻量型标记语言来撰写文章，如果你未接触过，这里提供一篇由少数派发布的&lt;a class="link" href="https://sspai.com/post/25137" target="_blank" rel="noopener"
>入门教程&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>用你喜欢的编辑器打开该 md 文件，进行你的创作&lt;/p>
&lt;p>你应该已经注意到，md 文件开头有 以&amp;mdash;分割的一段信息(Meta)&lt;/p>
&lt;p>这段信息至少包含了三个部分&lt;/p>
&lt;ul>
&lt;li>
&lt;p>title&lt;/p>
&lt;/li>
&lt;li>
&lt;p>date&lt;/p>
&lt;/li>
&lt;li>
&lt;p>draft&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>后面跟随的值分别代表了&lt;/p>
&lt;ul>
&lt;li>文章标题&lt;/li>
&lt;li>生成日期&lt;/li>
&lt;li>是否为草稿&lt;/li>
&lt;/ul>
&lt;p>你可以自由修改前两部分&lt;/p>
&lt;p>如果你想让这篇文章显示在你的网站上的话，请将&lt;/p>
&lt;pre>&lt;code> draft: true
&lt;/code>&lt;/pre>
&lt;p>改为&lt;/p>
&lt;pre>&lt;code> draft: false
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>这个表示表明了这篇文章是否为草稿&lt;/p>
&lt;/blockquote>
&lt;p>创作完成后，保存文件即可&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="部署">部署&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>在本地预览你的博客&lt;/p>
&lt;p>在 Terminal 中执行&lt;/p>
&lt;pre>&lt;code> &amp;gt;hugo server
&lt;/code>&lt;/pre>
&lt;p>这样，hugo 会在本地搭建一个静态服务器来让你能够看到当前博客的样子&lt;/p>
&lt;/li>
&lt;li>
&lt;p>发布博客至 Github Pages&lt;/p>
&lt;p>仅让自己看到博客，不够尽兴，让大家都能一览你的作品吧&lt;/p>
&lt;ul>
&lt;li>
&lt;p>创建 Repo:&lt;/p>
&lt;p>要发布你的博客，首先需要在 Github 上创建一个库(repo)&lt;/p>
&lt;p>打开你的 Github 主页, 选择 New&lt;/p>
&lt;p>&lt;img src="https://fzxiao233.github.io/imgs/build-blog-by-hugo/blog-1.png" alt="" />&lt;/p>
&lt;p>在新页面中，填入必要信息&lt;/p>
&lt;p>&lt;img src="https://fzxiao233.github.io/imgs/build-blog-by-hugo/blog-2.png" alt="" />&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Repositor name: 库的名称，此处建议使用 {github 用户名}.github.io 作为库名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Description: 用一段简短的话描述这个库，可省略&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Public: 为了部署我们的网站，这个库的类型应该是公开的&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Initialize this repository with: 此处的选项不在介绍，建议不勾选&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>点击绿色的 Create repository 来创建你的库&lt;/p>
&lt;/li>
&lt;li>
&lt;p>初始化本地 Git 库并 push 至 github&lt;/p>
&lt;p>回到 Terminal, 要想将网站发布，需要在本地创建 Git 库&lt;/p>
&lt;p>在网站根目录下依次执行&lt;/p>
&lt;pre>&lt;code> &amp;gt;git init
&amp;gt;git add .
&amp;gt;git commit -m &amp;quot;first commit&amp;quot;
&amp;gt;git remote add origin https://github.com/{你的 github 用户名}/{你的 github 用户名}.github.io.git
&amp;gt;git push -u origin master
&lt;/code>&lt;/pre>
&lt;p>这样，你的网站已经被上传到了 Github 上&lt;/p>
&lt;/li>
&lt;li>
&lt;p>配置 Github Actions&lt;/p>
&lt;p>hugo 的页面是需要静态生成后才能直接查看的，下面我们来配置 Github Actions&lt;/p>
&lt;p>在本帖网站根目录创建文件夹.github/workflows&lt;/p>
&lt;p>新建文件deploy.yml&lt;/p>
&lt;p>向文件中写入&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="c"># This is a basic workflow to help you get started with Actions&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">deploy-hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># Controls when the action will run. Triggers the workflow on push or pull request&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># events but only for the master branch&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">master ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">pull_request&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">master ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># A workflow run is made up of one or more jobs that can run sequentially or in parallel&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># This workflow contains a single job called &amp;#34;build&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># The type of runner that the job will run on&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Steps represent a sequence of tasks that will be executed as part of the job&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup Hugo # Step name&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-hugo@v2 # Step 使用的 actions&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 參數設定&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hugo-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;0.75.1&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">extended&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo --gc --minify --cleanDestinationDir&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-gh-pages@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">github_token&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.GITHUB_TOKEN }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./public&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>保存文件, 在 Terminal 中输入&lt;/p>
&lt;pre>&lt;code> &amp;gt;git add .
&amp;gt;git commit -m &amp;quot;init Actions&amp;quot;
&amp;gt;git push -u origin master
&lt;/code>&lt;/pre>
&lt;p>此时，Github Actions 会帮你生成文件后发布到 gh-pages 分支下&lt;/p>
&lt;/li>
&lt;li>
&lt;p>配置 Github Pages&lt;/p>
&lt;p>打开 Repo Setting 页面 &lt;a href="https://github.com/%7B">https://github.com/{&lt;/a>你的 github 用户名}/{你的 github 用户名}.github.io/settings&lt;/p>
&lt;p>&lt;img src="https://fzxiao233.github.io/imgs/build-blog-by-hugo/blog-3.png" alt="" />&lt;/p>
&lt;p>找到图示部分，将原有的Branch: master 切换为 gh-pages 点击右侧 Save 保存即可&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>大功告成&lt;/p>
&lt;p>打开 https://{你的 github 用户名}.github.io 来查看你的网站吧&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="后续创作">后续创作&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>直接在 Github 上在线编辑&lt;/p>
&lt;p>打开你的 Repo 页面&lt;/p>
&lt;p>&lt;img src="https://fzxiao233.github.io/imgs/build-blog-by-hugo/blog-4.png" alt="" />&lt;/p>
&lt;p>点击 Add file 选择 Create new file&lt;/p>
&lt;p>在打开的页面中&lt;/p>
&lt;p>&lt;img src="https://fzxiao233.github.io/imgs/build-blog-by-hugo/blog-5.png" alt="" />&lt;/p>
&lt;p>向 Name your file 中输入 content/post/{文章名字}.md&lt;/p>
&lt;p>在下面的编辑框中创作，别忘了加上 Meta 信息&lt;/p>
&lt;p>创作完成后在页脚点击绿色的 commit new file 即可&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在本地编辑器中创作&lt;/p>
&lt;p>回顾上文创作过程，创作完成后在 Terminal 中执行&lt;/p>
&lt;pre>&lt;code> &amp;gt;git add .
&amp;gt;git commit -m &amp;quot;{此处输入提示信息}&amp;quot;
&amp;gt;git push -u origin master
&lt;/code>&lt;/pre>
&lt;p>即可&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="感谢">感谢&lt;/h2>
&lt;p>恭喜你学会了搭建博客的方法，其中夹杂了 CLI, Git, Markdown 等知识，如果你对这些感兴趣，可以自行了解&lt;/p>
&lt;p>感谢你阅读我的文章!&lt;/p></description></item><item><title>Leetcode 27 移除元素</title><link>https://fzxiao233.github.io/posts/leetcode-27/</link><pubDate>Sat, 10 Oct 2020 19:46:46 +0800</pubDate><guid>https://fzxiao233.github.io/posts/leetcode-27/</guid><description>&lt;h2 id="题目">题目&lt;/h2>
&lt;p>给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。&lt;/p>
&lt;p>不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。&lt;/p>
&lt;p>元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。&lt;/p>
&lt;h2 id="解析">解析&lt;/h2>
&lt;p>先来分享一下题目要求&lt;/p>
&lt;ul>
&lt;li>通过 原地修改数组 移除所给值&lt;/li>
&lt;li>元素顺序可改变&lt;/li>
&lt;li>返回数组长度 注：其实数组也是会被判定的，因为传入的是数组的引用&lt;/li>
&lt;/ul>
&lt;h3 id="第一解">第一解&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Golang" data-lang="Golang">&lt;span class="kd">func&lt;/span> &lt;span class="nf">removeElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">nums&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">val&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">nums&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">val&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">nums&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">nums&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:]&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">nums&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>第一次写下了这个解法，遍历数组，如果是需要移除的数，就移除，最后返回数组长度&lt;/p>
&lt;p>毫无疑问，这是个错解&lt;/p>
&lt;p>因为没有考虑移除元素后，指针i已经+1，导致漏过了中间的元素&lt;/p>
&lt;h3 id="第二解">第二解&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Golang" data-lang="Golang">&lt;span class="kd">func&lt;/span> &lt;span class="nf">removeElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">nums&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">val&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">j&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">nums&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nx">val&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">j&lt;/span>&lt;span class="o">++&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">j&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>仔细阅读题目后，发现上一题还犯了一个错误：没有&lt;strong>原地修改数组&lt;/strong>&lt;/p>
&lt;p>因为其实使用 append 的过程中，是利用了 go 中 slice 的特性，创建了两个新数组然后合并&lt;/p>
&lt;p>那么，如果要原地修改数组的话，无疑是一个提示： &lt;strong>双指针&lt;/strong>&lt;/p>
&lt;p>这里定义两个指针 i, j 用快指针 i 来&lt;strong>遍历数组&lt;/strong>&lt;/p>
&lt;p>若得到的值并不是所给的需要移除的值，就将 i 处的元素放至 j 处，然后让慢指针 j 自增 1&lt;/p>
&lt;p>核心思想就在于 指针j 其实是在&lt;strong>创建&lt;/strong>答案所需的数组，只不过是覆盖原有元素来实现的&lt;/p>
&lt;p>那么当 指针i 遍历了整个数组后， 不需要删除的元素已经随着 指针j 创建好了， 而 j 正是数组的长度， 将其返回即可&lt;/p>
&lt;h3 id="第三解">第三解&lt;/h3>
&lt;p>LeetCode 官方还给出了另一种方法，考虑数组[1,2,3,3] 要移除的元素1&lt;/p>
&lt;p>因为移除的元素很少，但上面一个正解仍旧需要复制所有的非移除元素&lt;/p>
&lt;p>第三解解决了这个问题&lt;/p>
&lt;p>通过遍历数组，将最后一个元素放到当前需要元素上（效果等同于数组长度-1） 那么就能减少不需要移除的元素的复制&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Golang" data-lang="Golang"> &lt;span class="kd">func&lt;/span> &lt;span class="nf">removeElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">nums&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">val&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="nx">j&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">nums&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nx">j&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">val&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">j&lt;/span>&lt;span class="o">--&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">j&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="总结">总结&lt;/h2>
&lt;ul>
&lt;li>类似原地修改数组的题目，都可以考虑用&lt;strong>双指针&lt;/strong>法&lt;/li>
&lt;li>原地移除数组元素不是不可实现的，可以考虑用文中的 用最后一个元素替换需要移除的元素 或 用双指针重写整个数组来实现&lt;/li>
&lt;/ul></description></item><item><title>Hello Hugo!</title><link>https://fzxiao233.github.io/posts/hello_hugo/</link><pubDate>Sat, 10 Oct 2020 17:03:53 +0800</pubDate><guid>https://fzxiao233.github.io/posts/hello_hugo/</guid><description>&lt;blockquote>
&lt;p>人活着就在于折腾&lt;/p>
&lt;/blockquote>
&lt;p>我总是把 blog 系统折腾来折腾去，经历了 Wp -&amp;gt; Hexo -&amp;gt; Jeklly -&amp;gt; Hugo&lt;/p>
&lt;p>但是文章却没好好写几篇wwww，这次换到了 Hugo 应该折腾到头了吧&lt;/p>
&lt;p>步入了大一，给自己一个从头开始吧（各种方面的）&lt;/p>
&lt;p>于是乎，这里既是新家啦，技术，日常什么的，就往这里放了吧(不知道又能坚持多久)&lt;/p>
&lt;p>总之&lt;/p>
&lt;blockquote>
&lt;p>Do what you love and love what you do.&lt;/p>
&lt;/blockquote>
&lt;p>让我们共勉吧&lt;/p></description></item></channel></rss>
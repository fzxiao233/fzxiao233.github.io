<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on FZxiao 的大仓库</title><link>https://fzxiao233.github.io/hugo-blog/posts/</link><description>Recent content in Posts on FZxiao 的大仓库</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 10 Oct 2020 19:46:46 +0800</lastBuildDate><atom:link href="https://fzxiao233.github.io/hugo-blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Leetcode 27 移除元素</title><link>https://fzxiao233.github.io/hugo-blog/posts/leetcode-27/</link><pubDate>Sat, 10 Oct 2020 19:46:46 +0800</pubDate><guid>https://fzxiao233.github.io/hugo-blog/posts/leetcode-27/</guid><description>题目 给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。
不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。
元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。
解析 先来分享一下题目要求
通过 原地修改数组 移除所给值 元素顺序可改变 返回数组长度 注：其实数组也是会被判定的，因为传入的是数组的引用 第一解 func removeElement(nums []int, val int) int { for i:=0; i&amp;lt;len(nums); i++{ if nums[i] == val{ nums = append(nums[:i], nums[i+1:]...) } } return len(nums) } 第一次写下了这个解法，遍历数组，如果是需要移除的数，就移除，最后返回数组长度
毫无疑问，这是个错解
因为没有考虑移除元素后，指针i已经+1，导致漏过了中间的元素
第二解 func removeElement(nums []int, val int) int { j := 0 for i:=0; i&amp;lt;len(nums); i++{ if nums[i] !</description></item><item><title>Hello Hugo!</title><link>https://fzxiao233.github.io/hugo-blog/posts/hello_hugo/</link><pubDate>Sat, 10 Oct 2020 17:03:53 +0800</pubDate><guid>https://fzxiao233.github.io/hugo-blog/posts/hello_hugo/</guid><description>人活着就在于折腾
我总是把 blog 系统折腾来折腾去，经历了 Wp -&amp;gt; Hexo -&amp;gt; Jeklly -&amp;gt; Hugo
但是文章却没好好写几篇wwww，这次换到了 Hugo 应该折腾到头了吧
步入了大一，给自己一个从头开始吧（各种方面的）
于是乎，这里既是新家啦，技术，日常什么的，就往这里放了吧(不知道又能坚持多久)
总之
Do what you love and love what you do.
让我们共勉吧</description></item></channel></rss>